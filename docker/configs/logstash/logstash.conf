input {
  beats {
    port => 5044
  }

  tcp {
    port => 5000
    codec => json
  }

  udp {
    port => 5000
    codec => json
  }

  file {
    path => "/app/logs/*.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
  }
}

filter {
  if [type] == "api_log" {
    mutate {
      add_field => { "service" => "FastAPI" }
    }
    date {
      match => [ "timestamp", "ISO8601" ]
      target => "@timestamp"
    }
  }

  if [type] == "streamlit_log" {
    mutate {
      add_field => { "service" => "Streamlit" }
    }
    date {
      match => [ "timestamp", "ISO8601" ]
      target => "@timestamp"
    }
  }

  if [type] == "airflow_log" {
    mutate {
      add_field => { "service" => "Airflow" }
    }
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:log_level} - %{GREEDYDATA:log_message}" }
    }
    date {
      match => [ "timestamp", "ISO8601" ]
      target => "@timestamp"
    }
  }
}

output {
  stdout { codec => rubydebug }

  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "%{[service]}-logs-%{+YYYY.MM.dd}"
    document_type => "_doc"
    flush_size => 200
    idle_flush_time => 5
  }
}


pipeline.workers: 2
pipeline.batch.size: 125
pipeline.batch.delay: 5

filter {
  if [source_ip] {
    geoip {
      source => "source_ip"
      target => "geoip"
      database => "/usr/share/logstash/GeoLite2-City.mmdb"
    }
  }
}